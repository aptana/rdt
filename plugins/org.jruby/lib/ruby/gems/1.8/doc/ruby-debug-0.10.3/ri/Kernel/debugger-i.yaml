--- !ruby/object:RI::MethodDescription 
params: (steps = 1)
is_singleton: false
block_params: 
name: debugger
comment: 
- !ruby/struct:SM::Flow::P 
  body: Enters the debugger in the current thread after <em>steps</em> line events
    occur. Before entering the debugger startup script is read.
- !ruby/struct:SM::Flow::P 
  body: Setting <em>steps</em> to 0 will cause a break in the debugger subroutine
    and not wait for a line event to occur. You will have to go &quot;up 1&quot; in
    order to be back in your debugged program rather than the debugger. Settings <em>steps</em>
    to 0 could be useful you want to stop right after the last statement in some scope,
    because the next step will take you out of some scope.
full_name: Kernel#debugger
visibility: public
aliases: 
- !ruby/object:RI::AliasName 
  name: breakpoint
