--- !ruby/object:RI::ClassDescription 
includes: []

name: ShowCommand
constants: 
- !ruby/object:RI::Constant 
  name: Subcommands
  value: '[        [''annotate'', 2, "Show annotation level", "0 == normal; 2 == output
    annotated suitably for use by programs that control  ruby-debug."],        [''args'',
    2,          "Show argument list to give program being debugged when it is started",
    "Follow this command with any number of args, to be passed to the program."],        [''autoeval'',  4,
    "Show if unrecognized command are evaluated"],        [''autolist'',  4, "Show
    if ''list'' commands is run on breakpoints"],        [''autoirb'',   4, "Show
    if IRB is invoked on debugger stops"],        [''autoreload'', 4, "Show if source
    code is reloaded when changed"],        [''basename'',  1, "Show if basename used
    in reporting files"],        [''callstyle'', 2, "Show paramater style used showing
    call frames"],        [''commands'',  2, "Show the history of commands you typed",
    "You can supply a command number to start with."],        [''forcestep'', 1, "Show
    if sure ''next/step'' forces move to a new line"],        [''fullpath'',  2, "Show
    if full file names are displayed in frames"],        [''history'', 2, "Generic
    command for showing command history parameters", "show history filename -- Show
    the filename in which to record the command history show history save -- Show
    saving of the history record on exit show history size -- Show the size of the
    command history"],        [''keep-frame-bindings'', 1, "Save frame binding on
    each call"],        [''linetrace'', 3, "Show line execution tracing"],        [''linetrace+'',
    10,          "Show if consecutive lines should be different are shown in tracing"],        [''listsize'',
    3, "Show number of source lines to list by default"],        [''port'', 3, "Show
    server port"],        [''post-mortem'', 3, "Show whether we go into post-mortem
    debugging on an uncaught exception"],        [''trace'', 1,          "Show if
    a stack trace is displayed when ''eval'' raises exception"],        [''version'',
    1,          "Show what version of the debugger this is"],        [''width'', 1,          "Show
    the number of characters the debugger thinks are in a line"],       ].map do |name,
    min, short_help, long_help|        SubcmdStruct.new(name, min, short_help, long_help)'
  comment: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Implements debugger &quot;show&quot; command.
attributes: []

instance_methods: []

full_name: Debugger::ShowCommand
superclass: Command
class_methods: []

